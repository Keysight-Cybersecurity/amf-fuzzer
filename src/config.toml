[ Input ]

# Choose between pcap and live.
inputType = "pcap"

# If inputType is pcap, indicate input files or directory(ies).
inputFiles = ["ignore-directory/data/AMF_3_1.cap"]

# If inputFile contains a directory, choose wether to follow subdirectories or not.
# Choose between 'recursive' and 'static'
inputTraversal = "recursive"


# ==================================================================================================== #


[ Middleware ]

# Choose between 'ngap' or 'nas-5gs'
protocol = "nas-5gs"

    [ Middleware.Fuzzer ]
    # Choose between 'dumb', 'mutation', 'afl' all of these still have to be implemented
    fuzzerEngine = "dumb"

    # Seed for randomness of fuzzing engines. Only int are accepted.
    seed = 0

    # Choose which fields to fuzz (csv format). If left empty, will fuzz all fields.
    fields = ["gNB-ID", "procedureCode"]
    #fields = ["UEContextRequest"] # NAS-5G

    # What to do if none of the fields were found.
    defaultBehavior = "fuzzwholepacket"

    # As a float, how many randomly chosen bits should be toggled in dumb mode
    bitToggleRate = 0.20

    [ Middleware.Multiprocessing ]

    # Maximum amount of packets kept in memory for fuzzing (maximum is 256).
    queueSize = 64

    # Amount of processor threads that will be used for fuzzing (too high a number may render the system instable).
    coreAmount = 4



# ==================================================================================================== #


[ Filter ]

protocol = "nas-5gs"

# Possible behaviors: 'fuzz', 'send', 'block', 'raiseError' (stops program)
ruleSatisfiedBehaviour = "fuzz"

# If rule is not satisfied, follow behavior on packet
# Possible behaviors: 'fuzz', 'send', 'block', 'raiseError' (stops program)
defaultBehaviour = "send"

    # Apply filter on packets that satisfy expression
    [Filter.apply]
    # gNB-ID = '(78, 22)' # NGAP
    # procedureCode = 21 # NGAP

    [Filter.logic] 
    #expression = "gNB-ID and procedureCode" # NGAP
    expression = "True"


[ Logging ]
directory = "logs"

# ==================================================================================================== #


[ Output ] # This is for high-confidence errors
# Choose between 'csv', 'json', or 'none' (no file output).
outputType = 'csv'
outputFilename = 'outputs/output.csv'